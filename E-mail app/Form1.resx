<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wFQ2/EcILWT9gAAAABJRU5ErkJggg==
</value>
  </data>
</root>